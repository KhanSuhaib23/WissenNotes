Lecture 13 JAVA 21-06-2019

Akka framework

Use ThreadPools insteads of threads

	For this we have ExecutorService
	Executors // factory

		fixedthreadpool
		singlethreadpool
		cachedthreadpool

Runnable and Callable design patterns


With runnable you cannot have it return objects, know when it is done, etc.

Lock
	|
	|---> ReentrantLock
	|
	|---> Condition (created using lock objects) [await() and signal()]
	|
	|---> ReadWriteLock
	|		|
	|		|---> ReentrantReadWriteLock
	|
	|---> CyclicBarrier
	|
	|---> CountDownLatch // instead of join in thread pools


/--------- Network ------------/

Never close the Input or Output stream

It sends EOF to whoever is reading the stream

It disconnects everything



/--------- SQL ------------/


Connection
	|
	|---> register jdbc driver
	|			|
	|			|---> search <dbms-name> jdbc driver
	|
	|---> create new connection and return it

Class.forName(<driver class name>); // register the driver given by the class name

DriverManager.getConnection(url, ...);

PreparedStatement



Oracle Class Name->  oracle.jdbc.driver.OracleDriver
Oracle URL->         jdbc:oracle:thin:@localhost:1521:orcl


Option<class-name> // 


create table chapter (
chapter_index number,
title varchar2(100),
pages number,
book_isbn number,
constraint chapter_pk primary key (chapter_index, book_isbn),
constraint book_fk
foreign key (book_isbn)
references book(isbn)
)
/


select b.isbn ISBN, b.title Title, p.name Publisher, b.price Price, ch.tchaps Chapters, ch.tpages Pages
from (publisher p 
join book b
on p.id = b.publisher_id)
join 
(select c.book_isbn bisbn, count(c.chapter_index) tchaps, sum(c.pages) tpages
from chapter c group by c.book_isbn) ch
on ch.bisbn = b.isbn;
/


